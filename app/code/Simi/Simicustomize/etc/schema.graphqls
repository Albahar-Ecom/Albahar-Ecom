
interface ProductInterface {
	simiRelatedProduct: [SimiRelatedProduct] @doc(description: "Customize Related Product") @resolver(class: "Simi\\Simicustomize\\Model\\Resolver\\Product\\RelatedProduct")
}

type SimiStoreConfigDetails {
	facebook_config: SimiFacebookConfig @doc(description: "Facebook Configuration")
	google_config: SimiGoogleConfig @doc(description: "Google Configuration")
	footer_config: SimiFooterConfig @doc(description: "Footer Configuration")
}

type SimiStoreConfigDetailsSales {
	sales_minimum_order_active: String
	sales_minimum_order_amount: String
}

type ConfigurableProductOptions {
	attributeFrontendInput: String @doc(description: "Frontend Input") @resolver(class: "Simi\\Simicustomize\\Model\\Resolver\\Attribute\\FrontendInput")
}

type Mutation {
	socialGenerateCustomerToken(email: String!, id: String!, firstname: String, lastname: String): MbCustomerToken @resolver(class: "Simi\\Simicustomize\\Model\\Resolver\\SocialGenerateCustomerToken") @doc(description:"Retrieve the customer token by email. Strong validate social user before generate token")
}

type MbCustomerToken {
	token: String @doc(description: "The customer token")
}

type SimiRelatedProduct {
	sku: String
}

type SimiFacebookConfig {
	app_id: String
}

type SimiGoogleConfig {
	login_client_id: String
}

type SimiFooterConfig {
	facebook_link: String
	instagram_link: String
	twitter_link: String
	menu_title_1: String
	menu_title_2: String
	menus_1: [SimiFooterMenu]
	menus_2: [SimiFooterMenu]
	hotlines : [SimiContactHotLine]
}

type SimiFooterMenu {
	text: String
	url: String
}


